{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"lhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"internalParam","text":"rhs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/openlcblibrary\/eventid\/!=(_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/OpenlcbLibrary\/documentation\/OpenlcbLibrary\/EventID\/!=(_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Equatable.!=(_:_:)"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"role":"symbol","title":"!=(_:_:)","roleHeading":"Operator","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"op","externalID":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:14OpenlcbLibrary7EventIDV","extendedModule":"Swift","modules":[{"name":"OpenlcbLibrary"}]},"hierarchy":{"paths":[["doc:\/\/OpenlcbLibrary\/documentation\/OpenlcbLibrary","doc:\/\/OpenlcbLibrary\/documentation\/OpenlcbLibrary\/EventID","doc:\/\/OpenlcbLibrary\/documentation\/OpenlcbLibrary\/EventID\/Equatable-Implementations"]]},"references":{"doc://OpenlcbLibrary/documentation/OpenlcbLibrary/EventID/!=(_:_:)":{"role":"symbol","title":"!=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"!="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/OpenlcbLibrary\/documentation\/OpenlcbLibrary\/EventID\/!=(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/openlcblibrary\/eventid\/!=(_:_:)"},"doc://OpenlcbLibrary/documentation/OpenlcbLibrary":{"role":"collection","title":"OpenlcbLibrary","abstract":[{"type":"text","text":"An implementation of the OpenLCB protocols in library form."}],"identifier":"doc:\/\/OpenlcbLibrary\/documentation\/OpenlcbLibrary","kind":"symbol","type":"topic","url":"\/documentation\/openlcblibrary"},"doc://OpenlcbLibrary/documentation/OpenlcbLibrary/EventID":{"role":"symbol","title":"EventID","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventID"}],"abstract":[{"type":"text","text":"Represents an 8-byte event ID."},{"type":"text","text":" "},{"type":"text","text":"Provides conversion to and from Ints and Strings in standard form."}],"identifier":"doc:\/\/OpenlcbLibrary\/documentation\/OpenlcbLibrary\/EventID","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventID"}],"url":"\/documentation\/openlcblibrary\/eventid"},"doc://OpenlcbLibrary/documentation/OpenlcbLibrary/EventID/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/OpenlcbLibrary\/documentation\/OpenlcbLibrary\/EventID\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/openlcblibrary\/eventid\/equatable-implementations"}}}